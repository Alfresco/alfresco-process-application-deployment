# Default values for alfresco-process-application.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
# README documentation generated automatically from this file via https://github.com/norwoodj/helm-docs

# global -- for common values see https://github.com/Activiti/activiti-cloud-common-chart/blob/master/charts/common/README.md
global:
  # global.registryPullSecrets -- Configure pull secrets for all deployments
  registryPullSecrets:
    - quay-registry-secret

  applicationVersion: "1"

  image:
    pullPolicy: Always

  keycloak:
    # global.keycloak.host -- Configure Keycloak host template, i.e. "{{ .Release.Namespace }}.{{ .Values.global.gateway.domain }}"
    host: '{{ template "common.gateway-host" . }}'

    # global.keycloak.url -- Set full url to configure external Keycloak, https://keycloak.mydomain.com/auth
    url: ""

    # global.keycloak.realm -- Configure Keycloak realm
    realm: alfresco

    # global.keycloak.resource -- Configure Keycloak resource
    resource: alfresco

  gateway:
    # global.gateway.host -- Set to configure single host domain name for all services, i.e. "{{ .Release.Namespace }}.{{ template "common.gateway-domain" . }}"
    host: '{{ template "common.gateway-domain" . }}'

    # global.gateway.http -- Set to false enables HTTPS configuration on all urls
    http: false

    # global.gateway.tlsacme -- Set to enable automatic TLS for ingress if https is enabled
    tlsacme: false

    # global.gateway.domain -- Set to configure gateway domain template, i.e. {{ .Release.Namespace }}.1.3.4.5.nip.io
    # $ helm upgrade aae . --install --set global.gateway.domain=1.2.3.4.nip.io
    domain: ""

    # global.gateway.annotations -- Configure global annotations for all service ingresses
    annotations: {}

  acs:
    # global.acs.enabled -- enable support for ACS
    enabled: false


activiti-cloud-query:
  enabled: true
  nameOverride: query
  activiti:
    keycloak:
      clientPassword: client
  postgres:
    enabled: true
  image:
    repository: quay.io/alfresco/alfresco-process-query-service
    tag: develop
  ingress:
    path: /{{ .Release.Name }}
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/rewrite-target: /$1
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/cors-allow-headers: "*"
  probePath: /actuator/health
  extraEnv: |
    - name: SERVER_PORT
      value: "8080"
    - name: SERVER_USEFORWARDHEADERS
      value: "true"
    - name: SERVER_TOMCAT_INTERNALPROXIES
      value: ".*"
    - name: KEYCLOAK_USERESOURCEROLEMAPPINGS
      value: "false"
    - name: ACTIVITI_KEYCLOAK_CLIENT_PASSWORD
      value: '{{ .Values.activiti.keycloak.clientPassword }}'
    - name: ACTIVITI_CLOUD_APPLICATION_NAME
      value: "{{ .Release.Name }}"
    - name: GRAPHIQL_GRAPHQL_WS_PATH
      value: '/{{ .Release.Name }}/notifications/ws/graphql'
    - name: GRAPHIQL_GRAPHQL_WEB_PATH
      value: '/{{ .Release.Name }}/notifications/graphql'
  extraVolumes: |
    - name: license
      secret:
        secretName: licenseaps
  extraVolumeMounts: |
    - name: license
      mountPath: "/root/.activiti/enterprise-license/"
      readOnly: true
  affinity: {}

runtime-bundle:
  enabled: true
  nameOverride: rb
  projectName: example-app
  activiti:
    keycloak:
      clientPassword: client
  postgres:
    enabled: true
  image:
    repository: quay.io/alfresco/alfresco-process-runtime-bundle-service
    tag: develop
  ingress:
    enabled: true
    path: /{{ .Release.Name }}
    subPaths:
      - /rb/?(.*)
      - /preference/?(.*)
      - /form/?(.*)
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/rewrite-target: /$1
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/cors-allow-headers: "*"
  probePath: /actuator/health
  extraEnv: |
    - name: SERVER_PORT
      value: "8080"
    - name: SERVER_USEFORWARDHEADERS
      value: "true"
    - name: SERVER_TOMCAT_INTERNALPROXIES
      value: ".*"
    - name: ACTIVITI_CLOUD_APPLICATION_NAME
      value: "{{ .Release.Name }}"
    - name: ACT_KEYCLOAK_RESOURCE
      value: "{{ .Release.Name }}"
    - name: KEYCLOAK_USERESOURCEROLEMAPPINGS
      value: "true"
    - name: ACTIVITI_KEYCLOAK_CLIENT_PASSWORD
      value: '{{ .Values.activiti.keycloak.clientPassword }}'
    - name: SPRING_ACTIVITI_PROCESSDEFINITIONLOCATIONPREFIX
      value: 'file:/root/.activiti/project-release-volume/{{ .Values.global.applicationVersion }}/processes/'
    - name: PROJECT_MANIFEST_FILE_PATH
      value: 'file:/root/.activiti/project-release-volume/{{ .Values.global.applicationVersion }}/{{ .Values.projectName }}.json'
    - name: APPLICATION_VERSION
      value: '{{ .Values.global.applicationVersion }}'
    - name: ACT_RB_SERVICE_URL
      value: '{{ include "common.gateway-url" . }}/{{ .Release.Name }}/{{ .Values.nameOverride }}'
    - name: DMNCONFIGURATION_TABLESDEFINITIONSDIRECTORYPATH
      value: 'file:/root/.activiti/project-release-volume/{{ .Values.global.applicationVersion }}/decision-tables/'
    - name: FORMCONFIGURATION_FORMSDEFINITIONSDIRECTORYPATH
      value: 'file:/root/.activiti/project-release-volume/{{ .Values.global.applicationVersion }}/forms/'
    - name: CONTENT_SERVICE_ENABLED
      value: "{{ .Values.global.acs.enabled }}"
  extraVolumes: |
    - name: license
      secret:
        secretName: licenseaps
    - name: {{ .Release.Name }}
      persistentVolumeClaim:
        claimName: {{ .Release.Name }}
  extraVolumeMounts: |
    - name: license
      mountPath: "/root/.activiti/enterprise-license/"
      readOnly: true
    - name: {{ .Release.Name }}
      mountPath: '/root/.activiti/project-release-volume/{{ .Values.global.applicationVersion }}/'
  affinity: {}

activiti-cloud-connector:
  enabled: false
  nameOverride: example-cloud-connector
  image:
    repository: activiti/example-cloud-connector
    tag: develop
  ingress:
    enabled: true
    path: "/{{ .Release.Name }}/{{ .Values.nameOverride }}"
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/rewrite-target: /$1
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/cors-allow-headers: "*"
  probePath: "{{ tpl .Values.ingress.path . }}/actuator/health"
  extraEnv: |
    - name: SERVER_PORT
      value: "8080"
    - name: SERVER_SERVLET_CONTEXTPATH
      value: "{{ tpl .Values.ingress.path . }}"
    - name: SERVER_USEFORWARDHEADERS
      value: "true"
    - name: SERVER_TOMCAT_INTERNALPROXIES
      value: ".*"
    - name: ACTIVITI_CLOUD_APPLICATION_NAME
      value: "{{ .Release.Name }}"
  affinity: {}

alfresco-process-workspace-app:
  enabled: false
  nameOverride: workspace-app
  image:
    repository: quay.io/alfresco/alfresco-process-workspace-app
    tag: develop
  ingress:
    path: "/{{ .Release.Name }}/workspace"
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/rewrite-target: /$1
  env:
    APP_CONFIG_AUTH_TYPE: "OAUTH"
    APP_CONFIG_BPM_HOST: '{{ include "common.gateway-url" . }}'
    APP_CONFIG_APPS_DEPLOYED: '[{"name": "{{ .Release.Name }}" }]'

alfresco-digital-workspace-app:
  enabled: false
  nameOverride: digital-workspace-app
  ingress:
    path: "/{{ .Release.Name }}/digital-workspace"
  image:
    repository: quay.io/alfresco/alfresco-digital-workspace
    tag: develop
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/rewrite-target: /$1
  env:
    APP_CONFIG_AUTH_TYPE: "OAUTH"
    APP_CONFIG_BPM_HOST: '{{ include "common.gateway-url" . }}'
    APP_CONFIG_ECM_HOST: '{{ include "common.gateway-url" . }}'
    APP_CONFIG_APPS_DEPLOYED: '[{"name": "{{ .Release.Name }}" }]'
    APP_CONFIG_PROVIDER: "ALL"
    APP_CONFIG_IDENTITY_HOST: '{{ include "common.keycloak-url" . }}/admin/realms/{{ include "common.keycloak-realm" . }}'
    APP_WITH_PROCESS: "true"

alfresco-admin-app:
  enabled: false
  nameOverride: admin-app
  ingress:
    path: "/{{ .Release.Name }}/admin"
  image:
    repository: quay.io/alfresco/alfresco-admin-app
    tag: develop
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/rewrite-target: /$1
  env:
    APP_CONFIG_BPM_HOST: '{{ include "common.gateway-url" . }}'
    APP_CONFIG_AUTH_TYPE: "OAUTH"
    APP_CONFIG_IDENTITY_HOST: '{{ include "common.keycloak-url" . }}/admin/realms/{{ include "common.keycloak-realm" . }}'
    APP_CONFIG_APPS_DEPLOYED: '[{"name": "{{ .Release.Name }}" }]'

postgresql:
  enabled: true
  image:
    repository: postgres
    tag: 11.7
  postgresqlPassword: password
  postgresqlDataDir: /var/lib/postgresql/data/pgdata
  resources:
    requests:
      cpu: 350m
      memory: 512Mi

rabbitmq:
  enabled: true
  extraPlugins: ""
  livenessProbe:
    timeoutSeconds: 90
  readinessProbe:
    timeoutSeconds: 90
  persistence:
    storageClass:
    accessMode: ReadWriteOnce
  auth:
    username: guest
    password: guest
    erlangCookie: ylY79lOdNUWsJEwAGdVQnhjSazV4QZKO=
  resources:
    requests:
      cpu: 350m
      memory: 512Mi
    limits:
      cpu: "1"
      memory: 2Gi
  replicaCount: 1
  ingress:
    enabled: false
    hostName: "REPLACEME"
    path: /rabbitmq

volumeinit:
  enabled: true
  # volumeinit.image -- REPLACE with your image containing project files
  image:
    repository: alfresco/example-application-project
    tag: latest
    pullPolicy: Always

persistence:
  enabled: true
  storageClassName:
  accessModes:
    - ReadWriteOnce
  baseSize: 1Gi
