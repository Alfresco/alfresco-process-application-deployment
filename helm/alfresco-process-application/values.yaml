# Default values for alfresco-process-application.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  ## Configure pull secrets for all deployments
  registryPullSecrets:
    - "quay-registry-secret"

  image:
    pullPolicy: "Always"
    
  keycloak:
    ## Configure Activiti Keycloak host template, i.e. "activiti-keycloak.{{ .Release.Namespace }}.{{ .Values.global.gateway.domain }}"
    host: 'activiti-keycloak.{{ include "common.gateway-domain" . }}'

    ## Set full url to configure external Keycloak, https://keycloak.mydomain.com/auth
    url: ""

    ## Configure Keycloak realm
    realm: "alfresco"
    resource: "activiti"
    client: "activiti"

  gateway:
    ## Set to configure single domain name for all services, i.e. "activiti-cloud-gateway.{{ .Release.Namespace }}.{{ .Values.global.gateway.domain }}"
    host: 'activiti-cloud-gateway.{{ include "common.gateway-domain" . }}'

    ## Set to false enables HTTPS configuration on all urls
    http: "true"

    ## Set to enable automatic TLS for ingress if https is enabled
    tlsacme: "true"

    ## Set to configure gateway domain template, i.e. {{ .Release.Namespace }}.1.3.4.5.nip.io
    #  helm upgrade activiti . --install --set global.gateway.domain=1.2.3.4.nip.io
    domain: "REPLACEME"

    ## Configure global annotations for all service ingresses, i.e.
    annotations:
      certmanager.k8s.io/issuer: "letsencrypt-prod"
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/cors-allow-headers: "*"
      nginx.ingress.kubernetes.io/x-forwarded-prefix: "true"

  # Use Yaml formatted string to add extra environment properties to all deployments
  extraEnv: |
    - name: SERVER_USEFORWARDHEADERS
      value: "true"
    - name: SERVER_TOMCAT_INTERNALPROXIES
      value: ".*"
    - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
      value: "*"

activiti-cloud-connector:
  enabled: true

runtime-bundle:
  enabled: true

activiti-cloud-modeling:
  enabled: true
  db:
    deployPostgres: true
  ingress:
    enabled: true
    frontend:
      path: /activiti-cloud-modeling
  frontend:
    image:
      repository: activiti/activiti-modeling-app
      tag: 7.1.0.M1
  backend:
    image: 
      repository: activiti/activiti-cloud-modeling
      tag: 7.1.0.M1
    probePath: "/activiti-cloud-modeling-backend/actuator/health"
    extraEnv: |
      - name: SERVER_SERVLET_CONTEXTPATH
        value: "/activiti-cloud-modeling-backend"

activiti-cloud-application:
  activiti-cloud-query:
    db:
      deployPostgres: true
    image:
      repository: quay.io/alfresco/alfresco-process-query-service
      tag: "2.1.0"
    ingress:
      path: "/{{ .Release.Name }}/query"
      enabled: true
    probePath: "/{{ .Release.Name }}/query/actuator/health"
    extraEnv: |
      - name: KEYCLOAK_USERESOURCEROLEMAPPINGS
        value: "false"
      - name: SERVER_SERVLET_CONTEXTPATH
        value: "/{{ .Release.Name }}/query"
  activiti-cloud-audit:
    db:
      deployPostgres: true
    image:
      repository: quay.io/alfresco/alfresco-process-audit-service
      tag: "2.1.0"
    ingress:
      enabled: true
      path: "/{{ .Release.Name }}/audit"
    probePath: "/{{ .Release.Name }}/audit/actuator/health"
    extraEnv: |
      - name: KEYCLOAK_USERESOURCEROLEMAPPINGS
        value: "false"
      - name: SERVER_SERVLET_CONTEXTPATH
        value: "/{{ .Release.Name }}/audit"
  runtime-bundle:
    nameOverride: rb
    serviceAccount:
      create: false
    rbac:
      create: false
    db:
      deployPostgres: true
    image:
      repository: docker.io/activiti/example-runtime-bundle
      tag: "7.1.0.M1"
    ingress:
      enabled: true
      path: "/{{ .Release.Name }}/rb"
    probePath: "/{{ .Release.Name }}/rb/actuator/health"
    extraEnv: |
      - name: KEYCLOAK_USERESOURCEROLEMAPPINGS
        value: "false"
      - name: SERVER_SERVLET_CONTEXTPATH
        value: "/{{ .Release.Name }}/rb"
      - name: "ACTIVITI_CLOUD_APPLICATION_NAME"
        value: "{{ .Release.Name }}"
    extraVolumes: |
      - name: license
        secret:
          secretName: licenseaps
    extraVolumeMounts: |
      - name: license
        mountPath: "/root/.activiti/enterprise-license/"
        readOnly: true
  activiti-cloud-connector:
    enabled: true
    serviceAccount:
      create: false
    rbac:
      create: false
    image:
      repository: docker.io/activiti/example-cloud-connector
      tag: "7.1.0.M1"
    ingress:
      enabled: true
      path: "/{{ .Release.Name }}/example-cloud-connector"
    probePath: "/{{ .Release.Name }}/example-cloud-connector/actuator/health"
    extraEnv: |
      - name: SERVER_SERVLET_CONTEXTPATH
        value: "/{{ .Release.Name }}/example-cloud-connector"
  activiti-cloud-notifications-graphql:
    enabled: true
    image:
      repository: quay.io/alfresco/alfresco-process-notifications-graphql-service
      tag: "2.1.0"
    ingress:
      enabled: true
      path: "/{{ .Release.Name }}/notifications"

alfresco-admin-app:
  enabled: true
  image:
    repository: quay.io/alfresco/alfresco-admin-app
    tag: "2.1.0" 
  ingress:
    path: "/alfresco-admin-app"
  env:
    APP_CONFIG_AUTH_TYPE: "OAUTH"
    APP_CONFIG_OAUTH2_ADMIN_HOST: '{{ include "common.keycloak-url" . }}/admin/realms/{{ include "common.keycloak-realm" . }}'
    APP_CONFIG_APPS_DEPLOYED: '[{"name": "{{ .Release.Name }}" }]'

alfresco-process-workspace-app:
  enabled: true
  image:
    repository: quay.io/alfresco/alfresco-process-workspace-app
    tag: "2.1.0" 
  ingress:
    path: "/alfresco-process-workspace-app"
  env:
    APP_CONFIG_AUTH_TYPE: "OAUTH"
    APP_CONFIG_BPM_HOST: '{{ include "common.gateway-url" . }}'
    APP_CONFIG_APPS_DEPLOYED: '[{"name": "{{ .Release.Name }}" }]'
