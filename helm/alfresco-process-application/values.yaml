# Default values for alfresco-process-application.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
# README documentation generated automatically from this file via https://github.com/norwoodj/helm-docs
global:
  # global.registryPullSecrets -- Configure pull secrets for all deployments
  registryPullSecrets:
    - "quay-registry-secret"

  applicationVersion: "1"

  contentService:
    enabled: "false"

  image:
    pullPolicy: "Always"

  keycloak:
    # global.keycloak.host -- Keycloak host template, i.e. "{{ .Release.Namespace }}.{{ .Values.global.gateway.domain }}"
    host: '{{ include "common.gateway-domain" . }}'

    # global.keycloak.url -- full url to configure external Keycloak, https://keycloak.mydomain.com/auth
    url: ""

    # global.keycloak.realm -- Keycloak realm
    realm: "alfresco"

    # global.keycloak.resource -- Keycloak resource
    resource: "activiti"

  gateway:
    # global.gateway.host -- single domain name for all services, i.e. "{{ .Release.Namespace }}.{{ .Values.global.gateway.domain }}"
    host: '{{ include "common.gateway-domain" . }}'

    # global.gateway.host -- when false enables HTTPS configuration on all urls
    http: "false"

    # global.gateway.host -- enable automatic TLS for ingress if https is enabled
    tlsacme: "true"

    # global.gateway.domain -- gateway domain template, i.e. {{ .Release.Namespace }}.1.3.4.5.nip.io
    # helm upgrade activiti . --install --set global.gateway.domain=1.2.3.4.nip.io
    domain: "REPLACEME"

    # global.gateway.host -- global annotations for all service ingress resources
    annotations:
#      certmanager.k8s.io/issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/rewrite-target: /$1
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/cors-allow-headers: "*"

  # global.extraEnv -- YAML formatted string to add extra environment properties to all deployments
  extraEnv: |
#    - name: PROPERTY
#      value: "value"

activiti-cloud-query:
  enabled: true
  nameOverride: query
  postgres:
    enabled: true
  image:
    repository: quay.io/alfresco/alfresco-process-query-service
    tag: 7.1.0-M10
  ingress:
    path: /{{ .Release.Name }}
    enabled: true
  probePath: "/actuator/health"
  extraEnv: |
    - name: SERVER_PORT
      value: "8080"
    - name: SERVER_USEFORWARDHEADERS
      value: "true"
    - name: SERVER_TOMCAT_INTERNALPROXIES
      value: ".*"
    - name: KEYCLOAK_USERESOURCEROLEMAPPINGS
      value: "false"
    - name: ACTIVITI_CLOUD_APPLICATION_NAME
      value: "{{ .Release.Name }}"
    - name: GRAPHIQL_GRAPHQL_WS_PATH
      value: '/{{ .Release.Name }}/notifications/ws/graphql'
    - name: GRAPHIQL_GRAPHQL_WEB_PATH
      value: '/{{ .Release.Name }}/notifications/graphql'
  extraVolumes: |
    - name: license
      secret:
        secretName: licenseaps
  extraVolumeMounts: |
    - name: license
      mountPath: "/root/.activiti/enterprise-license/"
      readOnly: true
  affinity: {}

runtime-bundle:
  enabled: true
  nameOverride: rb
  projectName: example-app
  postgres:
    enabled: true
  image:
    repository: quay.io/alfresco/alfresco-process-runtime-bundle-service
    tag: 7.1.0-M10
  ingress:
    enabled: true
    path: /{{ .Release.Name }}
    subPaths:
      - /rb/?(.*)
      - /preference/?(.*)
      - /form/?(.*)
      - /process-storage/?(.*)
  probePath: /actuator/health
  extraEnv: |
    - name: SERVER_PORT
      value: "8080"
    - name: SERVER_USEFORWARDHEADERS
      value: "true"
    - name: SERVER_TOMCAT_INTERNALPROXIES
      value: ".*"
    - name: ACTIVITI_CLOUD_APPLICATION_NAME
      value: "{{ .Release.Name }}"
    - name: ACT_KEYCLOAK_RESOURCE
      value: "{{ .Release.Name }}"
    - name: KEYCLOAK_USERESOURCEROLEMAPPINGS
      value: "true"
    - name: SPRING_ACTIVITI_PROCESSDEFINITIONLOCATIONPREFIX
      value: 'file:/root/.activiti/project-release-volume/{{ .Values.global.applicationVersion }}/processes/'
    - name: PROJECT_MANIFEST_FILE_PATH
      value: 'file:/root/.activiti/project-release-volume/{{ .Values.global.applicationVersion }}/{{ .Values.projectName }}.json'
    - name: APPLICATION_VERSION
      value: '{{ .Values.global.applicationVersion }}'
    - name: ACT_RB_SERVICE_URL
      value: '{{ include "common.gateway-url" . }}/{{ .Release.Name }}/{{ .Values.nameOverride }}'
    - name: DMNCONFIGURATION_TABLESDEFINITIONSDIRECTORYPATH
      value: 'file:/root/.activiti/project-release-volume/{{ .Values.global.applicationVersion }}/decision-tables/'
    - name: FORMCONFIGURATION_FORMSDEFINITIONSDIRECTORYPATH
      value: 'file:/root/.activiti/project-release-volume/{{ .Values.global.applicationVersion }}/forms/'
    - name: CONTENTSERVICE_ENABLED
      value: '{{ .Values.global.contentService.enabled }}'
  extraVolumes: |
    - name: license
      secret:
        secretName: licenseaps
    - name: {{ .Release.Name }}
      persistentVolumeClaim:
        claimName: {{ .Release.Name }}
  extraVolumeMounts: |
    - name: license
      mountPath: "/root/.activiti/enterprise-license/"
      readOnly: true
    - name: {{ .Release.Name }}
      mountPath: '/root/.activiti/project-release-volume/{{ .Values.global.applicationVersion }}/'
  affinity: {}

activiti-cloud-connector:
  enabled: false
  nameOverride: example-cloud-connector
  image:
    repository: activiti/example-cloud-connector
    tag: 7.1.0-M10
  ingress:
    enabled: true
    path: "/{{ .Release.Name }}/{{ .Values.nameOverride }}"
  probePath: "{{ tpl .Values.ingress.path . }}/actuator/health"
  extraEnv: |
    - name: SERVER_PORT
      value: "8080"
    - name: SERVER_SERVLET_CONTEXTPATH
      value: "{{ tpl .Values.ingress.path . }}"
    - name: SERVER_USEFORWARDHEADERS
      value: "true"
    - name: SERVER_TOMCAT_INTERNALPROXIES
      value: ".*"
    - name: ACTIVITI_CLOUD_APPLICATION_NAME
      value: "{{ .Release.Name }}"
  affinity: {}

alfresco-process-workspace-app:
  enabled: false
  nameOverride: workspace-app
  image:
    repository: quay.io/alfresco/alfresco-process-workspace-app
    tag: 7.1.0-M10
  ingress:
    path: "/{{ .Release.Name }}/workspace"
  env:
    APP_CONFIG_AUTH_TYPE: "OAUTH"
    APP_CONFIG_BPM_HOST: '{{ include "common.gateway-url" . }}'
    APP_CONFIG_APPS_DEPLOYED: '[{"name": "{{ .Release.Name }}" }]'

alfresco-digital-workspace-app:
  enabled: false
  nameOverride: digital-workspace-app
  ingress:
    path: "/{{ .Release.Name }}/digital-workspace"
  image:
    repository: quay.io/alfresco/alfresco-digital-workspace
    tag: 7.1.0-M10
  env:
    APP_CONFIG_AUTH_TYPE: "OAUTH"
    APP_CONFIG_BPM_HOST: '{{ include "common.gateway-url" . }}'
    APP_CONFIG_ECM_HOST: '{{ include "common.gateway-url" . }}'
    APP_CONFIG_APPS_DEPLOYED: '[{"name": "{{ .Release.Name }}" }]'
    APP_CONFIG_PROVIDER: "ALL"
    APP_CONFIG_IDENTITY_HOST: '{{ include "common.keycloak-url" . }}/admin/realms/{{ include "common.keycloak-realm" . }}'
    APP_WITH_PROCESS: "true"

alfresco-admin-app:
  enabled: false
  nameOverride: admin-app
  ingress:
    path: "/{{ .Release.Name }}/admin"
  image:
    repository: quay.io/alfresco/alfresco-admin-app
    tag: 7.1.0-M10
    pullPolicy: Always
  env:
    APP_CONFIG_BPM_HOST: '{{ include "common.gateway-url" . }}'
    APP_CONFIG_AUTH_TYPE: "OAUTH"
    APP_CONFIG_IDENTITY_HOST: '{{ include "common.keycloak-url" . }}/admin/realms/{{ include "common.keycloak-realm" . }}'
    APP_CONFIG_APPS_DEPLOYED: '[{"name": "{{ .Release.Name }}" }]'

postgres:
  enabled: true
  image:
    repository: postgres
    tag: 11.4
  postgresqlPassword: password
  postgresqlDataDir: /var/lib/postgresql/data/pgdata
  resources:
    requests:
      cpu: 350m
      memory: 512Mi

rabbitmq:
  enabled: true
  service:
    clusterIP: None
  persistentVolume:
    enabled: true
  rabbitmqUsername: "guest"
  rabbitmqPassword: "guest"
  rabbitmqErlangCookie: 124567890abcdefghijklmnopqrstuv
  rabbitmqSTOMPPlugin:
    enabled: true
  resources:
    limits:
      cpu: 1
      memory: 2Gi
    requests:
      cpu: 350m
      memory: 512Mi
  rbac:
    create: true
  replicaCount: 1
  ingress:
    enabled: false
    hostName: "REPLACEME"
    path: /rabbitmq
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/cors-allow-headers: "*"
      nginx.ingress.kubernetes.io/x-forwarded-prefix: "true"

volumeinit:
  enabled: true
  image:
    # Image location for project files
    #repository: alfresco/example-application-project
    tag: latest
    pullPolicy: Always


persistence:
  enabled: true
  storageClassName: default-sc
  accessModes:
    - ReadWriteMany
  baseSize: 1Gi
