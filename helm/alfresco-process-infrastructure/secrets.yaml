alfresco-deployment-service:
  dockerRegistry:
    ## $ az acr show --name ${ACR_NAME} --query loginServer --output tsv
    server: ""
    ## $ ACR_REGISTRY_ID=$(az acr show --name ${ACR_NAME} --query id --output tsv)
    ## $ az ad sp create-for-rbac --name ${ACR_NAME} --role Contributor --scopes $ACR_REGISTRY_ID --query password --output tsv
    password: ""
    ## $ az ad sp show --id http://${ACR_NAME} --query appId --output tsv
    userName: ""
    ## quay secret name to copy
    secretName: "aps2-registry-secret"
  quayRegistry:
    server: quay.io
    password: ""
    userName: ""
    secretName: "quay-registry-secret"
  environment:
    # if deploying on same cluster as alfresco-deployment-service
    #apiUrl: "https://kubernetes"
    # otherwise on the other cluster:
    ## $ kubectl config view --minify -o jsonpath='{.clusters[0].cluster.server}'
    apiUrl: ""
    # Create service account
    ## $ kubectl create serviceaccount -n kube-system alfresco-deployment-service
    ## $ kubectl create clusterrolebinding alfresco-deployment-service-admin-binding --clusterrole cluster-admin --serviceaccount=kube-system:alfresco-deployment-service
    # for a generic cluster:
    ## $ kubectl -n kube-system get secret $(kubectl -n kube-system get serviceaccount alfresco-deployment-service -o jsonpath='{.secrets[0].name}') -o jsonpath='{.data.token}' | base64 --decode
    # for a cluster proxied by rancher2:
    ## $ kubectl config view --minify -o jsonpath='{.users[0].user.token}' | base64 --decode
    apiToken: ""
